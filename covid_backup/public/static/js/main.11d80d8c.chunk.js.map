{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","app.js","index.js","app.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","country","active","cardDetails","style","styles","infected","text","value","bottomText","className","container","Grid","spacing","justify","map","detail","index","item","component","Card","xs","md","cx","key","margin","padding","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","toLocaleTimeString","url","fetchData","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","hoverBackgroundColor","options","legend","display","title","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.11d80d8c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\",\"active\":\"Cards_active__1mwzX\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\n\nconst Cards = ({\n data: { confirmed, recovered, deaths, lastUpdate },\n country,\n\n\n}) => {\nif (!confirmed) {\n\nreturn \"Loading...\";\n }\n const active = confirmed[\"value\"] - recovered[\"value\"] - deaths[\"value\"];\n let cardDetails = [\n\n{\n style: styles.infected,\n text: \"Infected\",\n value: confirmed.value,\n bottomText: \"Number of infect cases of COVID-19\",\n },\n {\n style: styles.recovered,\n text: \"Recovered\",\n value: recovered.value,\n bottomText: \"Number of recoveries from COVID-19\",\n },\n {\n style: styles.deaths,\n text: \"Deaths\",\nvalue: deaths.value,\n bottomText: \"Number of deaths caused by COVID-19\",\n },\n {\n style: styles.active,\n text: \"Active\",\n value: active,\n bottomText: \"Number of active cases of COVID-19\",\n\n},\n ];\n return (\n\n\n\n\n<div className={styles.container}>\n<Grid container spacing={3} justify=\"center\">\n{cardDetails.map((detail, index) => (\n<Grid\n item\n component={Card}\n xs={12}\n md={2}\n className={cx(styles.Card, detail.style)}\n key={index}\n style={{ margin: \"0px 23.675px\", padding: \"12px\" }}\n\n\n\n\n>\n<CardContent>\n<Typography color=\"textPrimary\" gutterBottom>\n<b>{detail.text}</b>\n</Typography>\n <Typography variant=\"h5\">\n\n<CountUp\n start={0}\n end={detail.value}\nduration={2}\nseparator=\",\"\n\n/>\n </Typography>\n <Typography color=\"textPrimary\">Last Updated at : </Typography>\n <Typography color=\"textSecondary\" variant=\"body2\">\n\n{new Date(lastUpdate).toDateString()}\n </Typography>\n <Typography color=\"textSecondary\" variant=\"body2\">\n\n{new Date(lastUpdate).toLocaleTimeString()}\n </Typography>\n <Typography variant=\"body2\">{detail.bottomText}</Typography>\n <Typography color=\"textPrimary\"> {country} </Typography>\n\n</CardContent>\n</Grid>\n ))}\n </Grid>\n\n</div>\n\n\n);\n};\n\n\nexport default Cards;","import axios from \"axios\";\nconst url = \"https://covid19.mathdro.id/api\";\nexport const fetchData = async (country) => {\nlet changeableUrl = url;\nif (country) {\nchangeableUrl = `${url}/countries/${country}`;\n}\ntry {\nconst {\ndata: { confirmed, recovered, deaths, lastUpdate },\n} = await axios.get(changeableUrl);\nreturn {\nconfirmed,\nrecovered,\ndeaths,\nlastUpdate,\n};\n} catch (error) {\nconsole.log(error);\n}\n};\nexport const fetchDailyData = async () => {\ntry {\nconst { data } = await axios.get(`${url}/daily`);\nconst modifiedData = data.map((dailyData) => ({\nconfirmed: dailyData.confirmed.total,\ndeaths: dailyData.deaths.total,\ndate: dailyData.reportDate,\n}));\nreturn modifiedData;\n} catch (error) {}\n};\nexport const fetchCountries = async () => {\ntry {\nconst {\ndata: { countries },\n} = await axios.get(`${url}/countries`);\nreturn countries.map((country) => country.name);\n} catch (error) {\nconsole.log(error);\n}\n};","import React, { useState, useEffect } from \"react\";\n import { fetchDailyData } from \"../../api\";\n import { Line, Bar } from \"react-chartjs-2\";\n import styles from \"./Chart.module.css\";\n\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n const [dailyData, setDailyData] = useState([]);\n useEffect(() => {\n\n\nconst fetchAPI = async () => {\nsetDailyData(await fetchDailyData());\n };\n fetchAPI();\n }, []);\n const lineChart = dailyData.length ? (\n\n\n<Line\ndata={{\n labels: dailyData.map(({ date }) => date),\n datasets: [\n\n{\n data: dailyData.map(({ confirmed }) => confirmed),\n label: \"Infected\",\n borderColor: \"#3333ff\",\n fill: true,\n },\n {\n data: dailyData.map(({ deaths }) => deaths),\n label: \"Deaths\",\n borderColor: \"red\",\n backgroundColor: \"rgba(255,0,0,0.5)\",\n fill: true,\n\n},\n\n],\n\n\n\n}}\n/>\n) : null;\n\n\n\n\nconst barChart = confirmed ? (\n<Bar\ndata={{\n labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\n datasets: [\n\n{\n label: \"People\",\n backgroundColor: [\n \"rgba(0, 0, 255, 0.5)\",\n \"rgba(0, 255, 0, 0.5)\",\n \"rgba(255, 0, 0, 0.5)\",\n \"rgba(242, 234, 0, 0.5)\",\n ],\n hoverBackgroundColor: [\n \"rgba(0, 77, 153)\",\n \"rgba(30, 102, 49)\",\n \"rgba(255, 51, 51)\",\n \"rgba(204, 153, 0)\",\n ],\n data: [\n confirmed.value,\n recovered.value,\n deaths.value,\n confirmed.value - (recovered.value + deaths.value),\n\n],\n\n},\n\n],\n }}\n options={{\n legend: { display: false },\n title: { display: true, text: `Current state in ${country}` },\n\n}}\n\n/>\n\n) : null;\n\n\nreturn (\n\n<div className={styles.container}>{country ? barChart : lineChart}</div>\n\n\n);\n};\n\n\nexport default Chart;","import React, { useState, useEffect } from \"react\";\n import { NativeSelect, FormControl } from \"@material-ui/core\";\n import styles from \"./CountryPicker.module.css\";\n import { fetchCountries } from \"../../api\";\n\n\nconst CountryPicker = ({ handleCountryChange }) => {\n const [fetchedCountries, setFetchedCountries] = useState([]);\n useEffect(() => {\n\nconst fetchAPI = async () => {\n\nsetFetchedCountries(await fetchCountries());\n };\n fetchAPI();\n\n}, [setFetchedCountries]);\n\n\nreturn (\n\n<FormControl className={styles.formControl}>\n\n<NativeSelect\n defaultValue=\"\"\n onChange={(e) => handleCountryChange(e.target.value)}\n\n>\n <option value=\"\">Global</option>\n {fetchedCountries.map((country, key) => (\n\n<option key={key} value={country}>\n\n{country}\n\n</option>\n\n))}\n\n</NativeSelect>\n\n</FormControl>\n\n\n);\n};\n\n\nexport default CountryPicker;","import React from \"react\";\nimport { Cards, Chart, CountryPicker } from \"./components\";\nimport styles from \"./app.module.css\";\nimport { fetchData } from \"./api\";\nimport coronaImage from \"./images/image.png\";\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: \"\",\n  };\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n    this.setState({ data: fetchedData });\n  }\n  handleCountryChange = async (country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({ data: fetchedData, country: country });\n  };\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={coronaImage} alt=\"COVID-19\" />\n        <br />\n        <text>\n          <b>Global and Country Wide Cases of The Corona Virus</b>\n        </text>\n        <br />\n        <text>\n          <i>Select a Country Below</i>\n        </text>\n        <br />\n        <br />\n        <Cards data={data} country={country} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\"\n\nReactDOM.render(<App />,document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__2JKVN\",\"image\":\"app_image__RbrTz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\",\"image\":\"Chart_image__38iJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}