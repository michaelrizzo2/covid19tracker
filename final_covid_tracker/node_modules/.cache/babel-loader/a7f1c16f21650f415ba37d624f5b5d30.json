{"ast":null,"code":"import _regeneratorRuntime from\"/home/michael/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/michael/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";var url=\"https://covid19.mathdro.id/api\";export var fetchData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var changeableUrl,_yield$axios$get,_yield$axios$get$data,confirmed,recovered,deaths,lastUpdate;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:changeableUrl=url;if(country){changeableUrl=\"\".concat(url,\"/countries/\").concat(country);}_context.prev=2;_context.next=5;return axios.get(changeableUrl);case 5:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;confirmed=_yield$axios$get$data.confirmed;recovered=_yield$axios$get$data.recovered;deaths=_yield$axios$get$data.deaths;lastUpdate=_yield$axios$get$data.lastUpdate;return _context.abrupt(\"return\",{confirmed:confirmed,recovered:recovered,deaths:deaths,lastUpdate:lastUpdate});case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);console.log(_context.t0);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,14]]);}));return function fetchData(_x){return _ref.apply(this,arguments);};}();export var fetchDailyData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var _yield$axios$get2,data,modifiedData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return axios.get(\"\".concat(url,\"/daily\"));case 3:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;modifiedData=data.map(function(dailyData){return{confirmed:dailyData.confirmed.total,deaths:dailyData.deaths.total,date:dailyData.reportDate};});return _context2.abrupt(\"return\",modifiedData);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function fetchDailyData(){return _ref2.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$axios$get3,countries;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get(\"\".concat(url,\"/countries\"));case 3:_yield$axios$get3=_context3.sent;countries=_yield$axios$get3.data.countries;return _context3.abrupt(\"return\",countries.map(function(country){return country.name;}));case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function fetchCountries(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/home/michael/covid-tracker/src/api/index.js"],"names":["axios","url","fetchData","country","changeableUrl","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name"],"mappings":"iSAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,GAAG,CAAG,gCAAZ,CACA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,iBAAOC,OAAP,iNACrBC,aADqB,CACLH,GADK,CAEzB,GAAIE,OAAJ,CAAa,CACbC,aAAa,WAAMH,GAAN,uBAAuBE,OAAvB,CAAb,CACC,CAJwB,sCAQfH,CAAAA,KAAK,CAACK,GAAN,CAAUD,aAAV,CARe,8EAOzBE,IAPyB,CAOjBC,SAPiB,uBAOjBA,SAPiB,CAONC,SAPM,uBAONA,SAPM,CAOKC,MAPL,uBAOKA,MAPL,CAOaC,UAPb,uBAOaA,UAPb,iCASlB,CACPH,SAAS,CAATA,SADO,CAEPC,SAAS,CAATA,SAFO,CAGPC,MAAM,CAANA,MAHO,CAIPC,UAAU,CAAVA,UAJO,CATkB,4DAgBzBC,OAAO,CAACC,GAAR,cAhByB,qEAAH,kBAATV,CAAAA,SAAS,4CAAf,CAmBP,MAAO,IAAMW,CAAAA,cAAc,2FAAG,wNAEPb,CAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,WAFO,yCAEtBK,IAFsB,mBAEtBA,IAFsB,CAGxBQ,YAHwB,CAGTR,IAAI,CAACS,GAAL,CAAS,SAACC,SAAD,QAAgB,CAC9CT,SAAS,CAAES,SAAS,CAACT,SAAV,CAAoBU,KADe,CAE9CR,MAAM,CAAEO,SAAS,CAACP,MAAV,CAAiBQ,KAFqB,CAG9CC,IAAI,CAAEF,SAAS,CAACG,UAH8B,CAAhB,EAAT,CAHS,kCAQvBL,YARuB,mIAAH,kBAAdD,CAAAA,cAAc,2CAApB,CAWP,MAAO,IAAMO,CAAAA,cAAc,2FAAG,gNAIpBpB,CAAAA,KAAK,CAACK,GAAN,WAAaJ,GAAb,eAJoB,yCAGtBoB,SAHsB,mBAG9Bf,IAH8B,CAGtBe,SAHsB,kCAKvBA,SAAS,CAACN,GAAV,CAAc,SAACZ,OAAD,QAAaA,CAAAA,OAAO,CAACmB,IAArB,EAAd,CALuB,6DAO9BX,OAAO,CAACC,GAAR,eAP8B,sEAAH,kBAAdQ,CAAAA,cAAc,2CAApB","sourcesContent":["import axios from \"axios\";\nconst url = \"https://covid19.mathdro.id/api\";\nexport const fetchData = async (country) => {\nlet changeableUrl = url;\nif (country) {\nchangeableUrl = `${url}/countries/${country}`;\n}\ntry {\nconst {\ndata: { confirmed, recovered, deaths, lastUpdate },\n} = await axios.get(changeableUrl);\nreturn {\nconfirmed,\nrecovered,\ndeaths,\nlastUpdate,\n};\n} catch (error) {\nconsole.log(error);\n}\n};\nexport const fetchDailyData = async () => {\ntry {\nconst { data } = await axios.get(`${url}/daily`);\nconst modifiedData = data.map((dailyData) => ({\nconfirmed: dailyData.confirmed.total,\ndeaths: dailyData.deaths.total,\ndate: dailyData.reportDate,\n}));\nreturn modifiedData;\n} catch (error) {}\n};\nexport const fetchCountries = async () => {\ntry {\nconst {\ndata: { countries },\n} = await axios.get(`${url}/countries`);\nreturn countries.map((country) => country.name);\n} catch (error) {\nconsole.log(error);\n}\n};"]},"metadata":{},"sourceType":"module"}