{"ast":null,"code":"import _regeneratorRuntime from\"/home/michael/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/michael/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/michael/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{NativeSelect,FormControl}from\"@material-ui/core\";import styles from\"./CountryPicker.module.css\";import{fetchCountries}from\"../../api\";var CountryPicker=function CountryPicker(_ref){var handleCountryChange=_ref.handleCountryChange;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),fetchedCountries=_useState2[0],setFetchedCountries=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setFetchedCountries;_context.next=3;return fetchCountries();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[setFetchedCountries]);return/*#__PURE__*/React.createElement(FormControl,{className:styles.formControl},/*#__PURE__*/React.createElement(NativeSelect,{defaultValue:\"\",onChange:function onChange(e){return handleCountryChange(e.target.value);}},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Global\"),fetchedCountries.map(function(country,key){return/*#__PURE__*/React.createElement(\"option\",{key:key,value:country},country);})));};export default CountryPicker;","map":{"version":3,"sources":["/home/michael/covid-tracker/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","styles","fetchCountries","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","formControl","e","target","value","map","country","key"],"mappings":"mbAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACC,OAASC,YAAT,CAAuBC,WAAvB,KAA0C,mBAA1C,CACA,MAAOC,CAAAA,MAAP,KAAmB,4BAAnB,CACA,OAASC,cAAT,KAA+B,WAA/B,CAGD,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA6B,IAA1BC,CAAAA,mBAA0B,MAA1BA,mBAA0B,eACFP,QAAQ,CAAC,EAAD,CADN,wCAC3CQ,gBAD2C,eACzBC,mBADyB,eAElDR,SAAS,CAAC,UAAM,CAEjB,GAAMS,CAAAA,QAAQ,2FAAG,+IAEjBD,mBAFiB,uBAESJ,CAAAA,cAAc,EAFvB,qHAAH,kBAARK,CAAAA,QAAQ,2CAAd,CAICA,QAAQ,GAER,CARS,CAQP,CAACD,mBAAD,CARO,CAAT,CAWD,mBAEA,oBAAC,WAAD,EAAa,SAAS,CAAEL,MAAM,CAACO,WAA/B,eAEA,oBAAC,YAAD,EACC,YAAY,CAAC,EADd,CAEC,QAAQ,CAAE,kBAACC,CAAD,QAAOL,CAAAA,mBAAmB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1B,EAFX,eAKC,8BAAQ,KAAK,CAAC,EAAd,WALD,CAMEN,gBAAgB,CAACO,GAAjB,CAAqB,SAACC,OAAD,CAAUC,GAAV,qBAEvB,8BAAQ,GAAG,CAAEA,GAAb,CAAkB,KAAK,CAAED,OAAzB,EAECA,OAFD,CAFuB,EAArB,CANF,CAFA,CAFA,CA0BC,CAvCD,CA0CA,cAAeV,CAAAA,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n import { NativeSelect, FormControl } from \"@material-ui/core\";\n import styles from \"./CountryPicker.module.css\";\n import { fetchCountries } from \"../../api\";\n\n\nconst CountryPicker = ({ handleCountryChange }) => {\n const [fetchedCountries, setFetchedCountries] = useState([]);\n useEffect(() => {\n\nconst fetchAPI = async () => {\n\nsetFetchedCountries(await fetchCountries());\n };\n fetchAPI();\n\n}, [setFetchedCountries]);\n\n\nreturn (\n\n<FormControl className={styles.formControl}>\n\n<NativeSelect\n defaultValue=\"\"\n onChange={(e) => handleCountryChange(e.target.value)}\n\n>\n <option value=\"\">Global</option>\n {fetchedCountries.map((country, key) => (\n\n<option key={key} value={country}>\n\n{country}\n\n</option>\n\n))}\n\n</NativeSelect>\n\n</FormControl>\n\n\n);\n};\n\n\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}