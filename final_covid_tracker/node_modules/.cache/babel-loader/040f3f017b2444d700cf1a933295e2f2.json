{"ast":null,"code":"var _jsxFileName = \"/home/michael/covid19tracker/covid-tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255,0,0,0.5)\",\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 1\n    }\n  }) : null;\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\", \"rgba(242, 234, 0, 0.5)\"],\n        hoverBackgroundColor: [\"rgba(0, 77, 153)\", \"rgba(30, 102, 49)\", \"rgba(255, 51, 51)\", \"rgba(204, 153, 0)\"],\n        data: [confirmed.value, recovered.value, deaths.value, confirmed.value - (recovered.value + deaths.value)]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/home/michael/covid19tracker/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","hoverBackgroundColor","value","legend","display","title","text","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n import { fetchDailyData } from \"../../api\";\n import { Line, Bar } from \"react-chartjs-2\";\n import styles from \"./Chart.module.css\";\n\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n const [dailyData, setDailyData] = useState([]);\n useEffect(() => {\n\n\nconst fetchAPI = async () => {\nsetDailyData(await fetchDailyData());\n };\n fetchAPI();\n }, []);\n const lineChart = dailyData.length ? (\n\n\n<Line\ndata={{\n labels: dailyData.map(({ date }) => date),\n datasets: [\n\n{\n data: dailyData.map(({ confirmed }) => confirmed),\n label: \"Infected\",\n borderColor: \"#3333ff\",\n fill: true,\n },\n {\n data: dailyData.map(({ deaths }) => deaths),\n label: \"Deaths\",\n borderColor: \"red\",\n backgroundColor: \"rgba(255,0,0,0.5)\",\n fill: true,\n\n},\n\n],\n\n\n\n}}\n/>\n) : null;\n\n\n\n\nconst barChart = confirmed ? (\n<Bar\ndata={{\n labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\n datasets: [\n\n{\n label: \"People\",\n backgroundColor: [\n \"rgba(0, 0, 255, 0.5)\",\n \"rgba(0, 255, 0, 0.5)\",\n \"rgba(255, 0, 0, 0.5)\",\n \"rgba(242, 234, 0, 0.5)\",\n ],\n hoverBackgroundColor: [\n \"rgba(0, 77, 153)\",\n \"rgba(30, 102, 49)\",\n \"rgba(255, 51, 51)\",\n \"rgba(204, 153, 0)\",\n ],\n data: [\n confirmed.value,\n recovered.value,\n deaths.value,\n confirmed.value - (recovered.value + deaths.value),\n\n],\n\n},\n\n],\n }}\n options={{\n legend: { display: false },\n title: { display: true, text: `Current state in ${country}` },\n\n}}\n\n/>\n\n) : null;\n\n\nreturn (\n\n<div className={styles.container}>{country ? barChart : lineChart}</div>\n\n\n);\n};\n\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}