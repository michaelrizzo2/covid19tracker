{"ast":null,"code":"import _regeneratorRuntime from\"/home/michael/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/michael/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/michael/covid-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{fetchDailyData}from\"../../api\";import{Line,Bar}from\"react-chartjs-2\";import styles from\"./Chart.module.css\";var Chart=function Chart(_ref){var _ref$data=_ref.data,confirmed=_ref$data.confirmed,recovered=_ref$data.recovered,deaths=_ref$data.deaths,country=_ref.country;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dailyData=_useState2[0],setDailyData=_useState2[1];useEffect(function(){var fetchAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.t0=setDailyData;_context.next=3;return fetchDailyData();case 3:_context.t1=_context.sent;(0,_context.t0)(_context.t1);case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchAPI(){return _ref2.apply(this,arguments);};}();fetchAPI();},[]);var lineChart=dailyData.length?/*#__PURE__*/React.createElement(Line,{data:{labels:dailyData.map(function(_ref3){var date=_ref3.date;return date;}),datasets:[{data:dailyData.map(function(_ref4){var confirmed=_ref4.confirmed;return confirmed;}),label:\"Infected\",borderColor:\"#3333ff\",fill:true},{data:dailyData.map(function(_ref5){var deaths=_ref5.deaths;return deaths;}),label:\"Deaths\",borderColor:\"red\",backgroundColor:\"rgba(255,0,0,0.5)\",fill:true}]}}):null;var barChart=confirmed?/*#__PURE__*/React.createElement(Bar,{data:{labels:[\"Infected\",\"Recovered\",\"Deaths\",\"Active\"],datasets:[{label:\"People\",backgroundColor:[\"rgba(0, 0, 255, 0.5)\",\"rgba(0, 255, 0, 0.5)\",\"rgba(255, 0, 0, 0.5)\",\"rgba(242, 234, 0, 0.5)\"],hoverBackgroundColor:[\"rgba(0, 77, 153)\",\"rgba(30, 102, 49)\",\"rgba(255, 51, 51)\",\"rgba(204, 153, 0)\"],data:[confirmed.value,recovered.value,deaths.value,confirmed.value-(recovered.value+deaths.value)]}]},options:{legend:{display:false},title:{display:true,text:\"Current state in \".concat(country)}}}):null;return/*#__PURE__*/React.createElement(\"div\",{className:styles.container},country?barChart:lineChart);};export default Chart;","map":{"version":3,"sources":["/home/michael/covid-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","backgroundColor","barChart","hoverBackgroundColor","value","legend","display","title","text","container"],"mappings":"mbAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACC,OAASC,cAAT,KAA+B,WAA/B,CACA,OAASC,IAAT,CAAeC,GAAf,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,MAAP,KAAmB,oBAAnB,CAGD,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAyD,oBAAtDC,IAAsD,CAA9CC,SAA8C,WAA9CA,SAA8C,CAAnCC,SAAmC,WAAnCA,SAAmC,CAAxBC,MAAwB,WAAxBA,MAAwB,CAAdC,OAAc,MAAdA,OAAc,eACpCX,QAAQ,CAAC,EAAD,CAD4B,wCAC/DY,SAD+D,eACpDC,YADoD,eAEtEZ,SAAS,CAAC,UAAM,CAGjB,GAAMa,CAAAA,QAAQ,2FAAG,+IACjBD,YADiB,uBACEX,CAAAA,cAAc,EADhB,qHAAH,kBAARY,CAAAA,QAAQ,2CAAd,CAGCA,QAAQ,GACP,CAPQ,CAON,EAPM,CAAT,CAQA,GAAMC,CAAAA,SAAS,CAAGH,SAAS,CAACI,MAAV,cAGnB,oBAAC,IAAD,EACA,IAAI,CAAE,CACLC,MAAM,CAAEL,SAAS,CAACM,GAAV,CAAc,mBAAGC,CAAAA,IAAH,OAAGA,IAAH,OAAcA,CAAAA,IAAd,EAAd,CADH,CAELC,QAAQ,CAAE,CAEX,CACCb,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGV,CAAAA,SAAH,OAAGA,SAAH,OAAmBA,CAAAA,SAAnB,EAAd,CADP,CAECa,KAAK,CAAE,UAFR,CAGCC,WAAW,CAAE,SAHd,CAICC,IAAI,CAAE,IAJP,CAFW,CAQV,CACAhB,IAAI,CAAEK,SAAS,CAACM,GAAV,CAAc,mBAAGR,CAAAA,MAAH,OAAGA,MAAH,OAAgBA,CAAAA,MAAhB,EAAd,CADN,CAEAW,KAAK,CAAE,QAFP,CAGAC,WAAW,CAAE,KAHb,CAIAE,eAAe,CAAE,mBAJjB,CAKAD,IAAI,CAAE,IALN,CARU,CAFL,CADN,EAHmB,CA6Bf,IA7BH,CAkCD,GAAME,CAAAA,QAAQ,CAAGjB,SAAS,cAC1B,oBAAC,GAAD,EACA,IAAI,CAAE,CACLS,MAAM,CAAE,CAAC,UAAD,CAAa,WAAb,CAA0B,QAA1B,CAAoC,QAApC,CADH,CAELG,QAAQ,CAAE,CAEX,CACCC,KAAK,CAAE,QADR,CAECG,eAAe,CAAE,CACjB,sBADiB,CAEjB,sBAFiB,CAGjB,sBAHiB,CAIjB,wBAJiB,CAFlB,CAQCE,oBAAoB,CAAE,CACtB,kBADsB,CAEtB,mBAFsB,CAGtB,mBAHsB,CAItB,mBAJsB,CARvB,CAcCnB,IAAI,CAAE,CACNC,SAAS,CAACmB,KADJ,CAENlB,SAAS,CAACkB,KAFJ,CAGNjB,MAAM,CAACiB,KAHD,CAINnB,SAAS,CAACmB,KAAV,EAAmBlB,SAAS,CAACkB,KAAV,CAAkBjB,MAAM,CAACiB,KAA5C,CAJM,CAdP,CAFW,CAFL,CADN,CA+BC,OAAO,CAAE,CACTC,MAAM,CAAE,CAAEC,OAAO,CAAE,KAAX,CADC,CAETC,KAAK,CAAE,CAAED,OAAO,CAAE,IAAX,CAAiBE,IAAI,4BAAsBpB,OAAtB,CAArB,CAFE,CA/BV,EAD0B,CAwCtB,IAxCJ,CA2CA,mBAEA,2BAAK,SAAS,CAAEN,MAAM,CAAC2B,SAAvB,EAAmCrB,OAAO,CAAGc,QAAH,CAAcV,SAAxD,CAFA,CAMC,CA7FD,CAgGA,cAAeT,CAAAA,KAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n import { fetchDailyData } from \"../../api\";\n import { Line, Bar } from \"react-chartjs-2\";\n import styles from \"./Chart.module.css\";\n\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n const [dailyData, setDailyData] = useState([]);\n useEffect(() => {\n\n\nconst fetchAPI = async () => {\nsetDailyData(await fetchDailyData());\n };\n fetchAPI();\n }, []);\n const lineChart = dailyData.length ? (\n\n\n<Line\ndata={{\n labels: dailyData.map(({ date }) => date),\n datasets: [\n\n{\n data: dailyData.map(({ confirmed }) => confirmed),\n label: \"Infected\",\n borderColor: \"#3333ff\",\n fill: true,\n },\n {\n data: dailyData.map(({ deaths }) => deaths),\n label: \"Deaths\",\n borderColor: \"red\",\n backgroundColor: \"rgba(255,0,0,0.5)\",\n fill: true,\n\n},\n\n],\n\n\n\n}}\n/>\n) : null;\n\n\n\n\nconst barChart = confirmed ? (\n<Bar\ndata={{\n labels: [\"Infected\", \"Recovered\", \"Deaths\", \"Active\"],\n datasets: [\n\n{\n label: \"People\",\n backgroundColor: [\n \"rgba(0, 0, 255, 0.5)\",\n \"rgba(0, 255, 0, 0.5)\",\n \"rgba(255, 0, 0, 0.5)\",\n \"rgba(242, 234, 0, 0.5)\",\n ],\n hoverBackgroundColor: [\n \"rgba(0, 77, 153)\",\n \"rgba(30, 102, 49)\",\n \"rgba(255, 51, 51)\",\n \"rgba(204, 153, 0)\",\n ],\n data: [\n confirmed.value,\n recovered.value,\n deaths.value,\n confirmed.value - (recovered.value + deaths.value),\n\n],\n\n},\n\n],\n }}\n options={{\n legend: { display: false },\n title: { display: true, text: `Current state in ${country}` },\n\n}}\n\n/>\n\n) : null;\n\n\nreturn (\n\n<div className={styles.container}>{country ? barChart : lineChart}</div>\n\n\n);\n};\n\n\nexport default Chart;"]},"metadata":{},"sourceType":"module"}